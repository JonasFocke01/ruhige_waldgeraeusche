import { SvelteComponentTyped } from "svelte";
declare const __propDef: {
    props: {
        placeholder?: string | undefined;
        label?: string | undefined;
        password?: string | undefined;
        required?: boolean | undefined;
        disabled?: boolean | undefined;
        showDisabledIcon?: boolean | undefined;
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {};
};
export declare type PasswordProps = typeof __propDef.props;
export declare type PasswordEvents = typeof __propDef.events;
export declare type PasswordSlots = typeof __propDef.slots;
/**
 * a basic input field which displays the letters as dots
 *
 * **label**
 * * string
 * * default: 'Label'
 * * sets the label of the field
 *
 * **password**
 * * string
 * * default: ''
 * * represents the value of the field
 *
 * **placeholder**
 * * string
 * * default: 'Placeholder'
 * * sets the placeholder for the field
 *
 * **on:valueChanged**
 * *same as on:change but dispatched after hashing the value*
 * * function
 * * default: () => {}
 * * sets the callback function for the change event
 *
 * **disabled**
 * * boolean
 * * default: false
 * * sets the field to disabled/readonly
 *
 * **showDisabledIcon**
 * * boolean
 * * default: false
 * * shows a disabled icon if the field is disabled
 *
 * **required**
 * * boolean
 * * default: false
 * * sets the field to required
 */
export default class Password extends SvelteComponentTyped<PasswordProps, PasswordEvents, PasswordSlots> {
}
export {};
