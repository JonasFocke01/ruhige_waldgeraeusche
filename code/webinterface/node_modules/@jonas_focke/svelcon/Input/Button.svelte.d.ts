import { SvelteComponentTyped } from "svelte";
declare const __propDef: {
    props: {
        bgColor?: "primary" | "secondary" | "accent" | "success" | "error" | "warning" | "info" | "surface" | "text" | "black" | undefined;
        textColor?: "primary" | "secondary" | "accent" | "success" | "error" | "warning" | "info" | "surface" | "text" | "black" | undefined;
        typewriterSpeed?: number | undefined;
        additionalClasses?: string | undefined;
        size?: "small" | "medium" | "large" | undefined;
        text?: string | undefined;
        disabled?: boolean | undefined;
    };
    events: {
        click: MouseEvent;
    } & {
        [evt: string]: CustomEvent<any>;
    };
    slots: {};
};
export declare type ButtonProps = typeof __propDef.props;
export declare type ButtonEvents = typeof __propDef.events;
export declare type ButtonSlots = typeof __propDef.slots;
/**
 * a basic button
 *
 * **text**
 * * string
 * * default: ''
 * * sets the text of the button
 *
 * **color**
 * * string
 * * default: 'bg-accent'
 * * sets the color of the button
 *
 * **textColor**
 * * string
 * * default: 'text'
 * * sets the text color of the button
 * **additionalClasses**
 * * string
 * * default: ''
 * * sets additional css/Tailwind classes for the button
 *
 * **on:click**
 * * function
 * * default: () => {}
 * * triggered when the button is clicked
 *
 * **typewriterSpeed**
 * * number
 * * default: 0
 * * if greater than 0, the text will be displayed typewriter style
 *
 * **disabled**
 * * boolean
 * * default: false
 * * disables the button
 */
export default class Button extends SvelteComponentTyped<ButtonProps, ButtonEvents, ButtonSlots> {
}
export {};
