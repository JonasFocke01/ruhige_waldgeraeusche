import { SvelteComponentTyped } from "svelte";
declare const __propDef: {
    props: {
        label?: string | undefined;
        checked?: boolean | undefined;
        disabled?: boolean | undefined;
        showDisabledIcon?: boolean | undefined;
    };
    events: {
        change: Event;
    } & {
        [evt: string]: CustomEvent<any>;
    };
    slots: {};
};
export declare type CheckboxProps = typeof __propDef.props;
export declare type CheckboxEvents = typeof __propDef.events;
export declare type CheckboxSlots = typeof __propDef.slots;
/**
 * display a basic checkbox
 *
 * **label**
 * * string
 * * default: 'Label'
 * * sets the label of the checkbox
 *
 * **checked**
 * * boolean
 * * default: false
 * * represents the checked state of the checkbox.
 *
 * **on:change**
 * * function
 * * default: () => {}
 * * triggered when the checkbox is checked or unchecked.
 *
 * **disabled**
 * * boolean
 * * default: false
 * * if true, the checkbox is disabled.
 *
 * **showDisabledIcon**
 * * boolean
 * * default: false
 * * if true, the disabled icon will be displayed, if the checkbox is disabled.
 */
export default class Checkbox extends SvelteComponentTyped<CheckboxProps, CheckboxEvents, CheckboxSlots> {
}
export {};
