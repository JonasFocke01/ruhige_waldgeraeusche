import { SvelteComponentTyped } from "svelte";
declare const __propDef: {
    props: {
        label?: string | undefined;
        items?: string[] | undefined;
        chosenItem?: string | undefined;
        disabled?: boolean | undefined;
        showDisabledIcon?: boolean | undefined;
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {};
};
export declare type RadioGroupProps = typeof __propDef.props;
export declare type RadioGroupEvents = typeof __propDef.events;
export declare type RadioGroupSlots = typeof __propDef.slots;
/**
 * display a basic radio group
 *
 * **label**
 * * string
 * * default: !NO DEFAULT!
 * * sets the label of the Group
 *
 * **items**
 * * Array<string>
 * * default: !NO DEFAULT!
 * * sets the items of the Group
 *
 * **chosenItem**
 * * string
 * * default: 'none'
 * * represents the checked item of the Group
 *
 * **on:change**
 * * function
 * * default: !NO DEFAULT!
 * * is called when the chosen item changes
 *
 * **disabled**
 * * boolean
 * * default: false
 * * if true, the group is disabled/readonly
 *
 * **showDisabledIcon**
 * * boolean
 * * default: false
 * * if true, the disabled icon will be displayed, if the group is disabled
 */
export default class RadioGroup extends SvelteComponentTyped<RadioGroupProps, RadioGroupEvents, RadioGroupSlots> {
    get label(): string | undefined;
    /**accessor*/
    set label(_: string | undefined);
    get items(): string[] | undefined;
    /**accessor*/
    set items(_: string[] | undefined);
    get chosenItem(): string | undefined;
    /**accessor*/
    set chosenItem(_: string | undefined);
    get disabled(): boolean | undefined;
    /**accessor*/
    set disabled(_: boolean | undefined);
    get showDisabledIcon(): boolean | undefined;
    /**accessor*/
    set showDisabledIcon(_: boolean | undefined);
}
export {};
