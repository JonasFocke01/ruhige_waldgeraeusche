import { SvelteComponentTyped } from "svelte";
declare const __propDef: {
    props: {
        placeholder?: string | undefined;
        label?: string | undefined;
        min?: number | undefined;
        max?: number | undefined;
        value?: number | undefined;
        disabled?: boolean | undefined;
        showDisabledIcon?: boolean | undefined;
    };
    events: {
        change: Event;
    } & {
        [evt: string]: CustomEvent<any>;
    };
    slots: {};
};
export declare type NumberProps = typeof __propDef.props;
export declare type NumberEvents = typeof __propDef.events;
export declare type NumberSlots = typeof __propDef.slots;
/**
 * a basic number input field
 *
 * **label**
 * * string
 * * default: 'Label'
 * * sets the label of the field
 *
 * **value**
 * * number
 * * default: 0
 * * represents the value of the field
 *
 * **min**
 * * number
 * * default: -1024
 * * sets the minimum value of the field
 *
 * **max**
 * * number
 * * default: 1024
 * * sets the maximum value of the field
 *
 * **placeholder**
 * * string
 * * default: '0'
 * * sets the placeholder for the field
 *
 * **disabled**
 * * boolean
 * * default: false
 * * sets the field to disabled/readonly
 *
 * **showDisabledIcon**
 * * boolean
 * * default: false
 * * shows a disabled icon if the field is disabled
 *
 * **on:change**
 * * function
 * * default: () => {}
 * * sets the callback function for the change event
 */
export default class Number extends SvelteComponentTyped<NumberProps, NumberEvents, NumberSlots> {
}
export {};
