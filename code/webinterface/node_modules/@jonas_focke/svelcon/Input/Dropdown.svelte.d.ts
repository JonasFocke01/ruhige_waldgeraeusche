import { SvelteComponentTyped } from "svelte";
declare const __propDef: {
    props: {
        options: Array<string>;
        label?: string | undefined;
        value?: string | undefined;
        disabled?: boolean | undefined;
        showDisabledIcon?: boolean | undefined;
    };
    events: {
        change: Event;
    } & {
        [evt: string]: CustomEvent<any>;
    };
    slots: {};
};
export declare type DropdownProps = typeof __propDef.props;
export declare type DropdownEvents = typeof __propDef.events;
export declare type DropdownSlots = typeof __propDef.slots;
/**
 * display a basic dropdown field
 *
 * **label**
 * * string
 * * default: 'Label'
 * * sets the label of the field
 *
 * **options**
 * * Array< string >
 * * default: ['']
 * * all available options
 *
 * **value**
 * * string
 * * default: ''
 * * represents the value of the field
 *
 * **on:change**
 * * function
 * * default: () => {}
 * * triggered when the value of the input changes
 *
 * **disabled**
 * * boolean
 * * default: false
 * * if true, the field is disabled/readonly
 *
 * **showDisabledIcon**
 * * boolean
 * * default: false
 * * if true, the disabled icon will be displayed, if the field is disabled
 */
export default class Dropdown extends SvelteComponentTyped<DropdownProps, DropdownEvents, DropdownSlots> {
}
export {};
