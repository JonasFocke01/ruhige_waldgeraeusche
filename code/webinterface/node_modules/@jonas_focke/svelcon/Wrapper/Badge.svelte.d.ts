import { SvelteComponentTyped } from "svelte";
declare const __propDef: {
    props: {
        text?: string | undefined;
        bounce?: boolean | undefined;
        bgColor?: "primary" | "secondary" | "accent" | "success" | "error" | "warning" | "info" | "surface" | "text" | "black" | undefined;
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        default: {};
    };
};
export declare type BadgeProps = typeof __propDef.props;
export declare type BadgeEvents = typeof __propDef.events;
export declare type BadgeSlots = typeof __propDef.slots;
/**
 * a basic badge
 *
 * **text**
 *   * string
 *   * default: ''
 *   * the text of the badge.
 *   * This should never be a long text but rather a single digit
 *
 * **bgColor**
 *   * string
 *   * default: 'bg-accent'
 *   * sets the bgColor of the badge
 *
 * **slot**
 *   * slot
 *   * default: !NO DEFAULT!
 *   * what to display the badge on
 *
 * **bounce**
 *   * boolean
 *   * default: true
 *   * if true, the badge will bounce continously.
 */
export default class Badge extends SvelteComponentTyped<BadgeProps, BadgeEvents, BadgeSlots> {
    get text(): string | undefined;
    /**accessor*/
    set text(_: string | undefined);
    get bounce(): boolean | undefined;
    /**accessor*/
    set bounce(_: boolean | undefined);
    get bgColor(): "primary" | "secondary" | "accent" | "success" | "error" | "warning" | "info" | "surface" | "text" | "black" | undefined;
    /**accessor*/
    set bgColor(_: "primary" | "secondary" | "accent" | "success" | "error" | "warning" | "info" | "surface" | "text" | "black" | undefined);
}
export {};
