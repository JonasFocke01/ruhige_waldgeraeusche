import { SvelteComponentTyped } from "svelte";
declare const __propDef: {
    props: {
        padding?: "" | `p-${number}` | `pb-${number}` | `pt-${number}` | `pr-${number}` | `pl-${number}` | `px-${number}` | `py-${number}` | `-p-${number}` | `-pb-${number}` | `-pt-${number}` | `-pr-${number}` | `-pl-${number}` | `-px-${number}` | `-py-${number}` | undefined;
        rounded?: boolean | undefined;
        divideHeadderSlot?: boolean | undefined;
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        Headder: {};
        default: {};
    };
};
export declare type CardProps = typeof __propDef.props;
export declare type CardEvents = typeof __propDef.events;
export declare type CardSlots = typeof __propDef.slots;
/**
 * a simple wrapper to display the content in a cardlike container
 *
 * **padding**
 * * tailwind padding class
 * * default: ''
 * * the padding of the card container
 * * example: 'p-4'
 *
 * **rounded**
 * * boolean
 * * default: false
 * * if the card should have rounded corners
 *
 * **divideHeadderSlot**
 * * boolean
 * * default: true
 * * if the headder should be underlined
 */
export default class Card extends SvelteComponentTyped<CardProps, CardEvents, CardSlots> {
}
export {};
