import { SvelteComponentTyped } from "svelte";
declare const __propDef: {
    props: {
        text?: string | undefined;
        size?: "" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" | "xs" | "sm" | "base" | "lg" | "xl" | "2xs" | "2sm" | "2base" | "2lg" | "2xl" | "3xs" | "3sm" | "3base" | "3lg" | "3xl" | "4xs" | "4sm" | "4base" | "4lg" | "4xl" | "5xs" | "5sm" | "5base" | "5lg" | "5xl" | "6xs" | "6sm" | "6base" | "6lg" | "6xl" | "7xs" | "7sm" | "7base" | "7lg" | "7xl" | "8xs" | "8sm" | "8base" | "8lg" | "8xl" | "9xs" | "9sm" | "9base" | "9lg" | "9xl" | undefined;
        textColor?: "primary" | "secondary" | "accent" | "success" | "error" | "warning" | "info" | "surface" | "text" | "black" | undefined;
        typewriterSpeed?: number | undefined;
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {};
};
export declare type TextProps = typeof __propDef.props;
export declare type TextEvents = typeof __propDef.events;
export declare type TextSlots = typeof __propDef.slots;
/**
 * Displays the text preformatted
 *
 * **How to format**
 *
 * _You can use the following syntax:_
 *
 * * \*bold\*
 * * \_underline\_
 * * \#italic\#
 * * \-strikeTrhough\-
 * * ! ignore next char
 * * eg.: '\*Hello \_World\_\* \#This \_is \#is an\_ \-example\-\#'
 *
 * **text**
 * * string
 * * default: Hello World
 * * the text to display
 *
 * **size**
 * * string: tailwind text size (2xl | xs | [...])
 * * default: 'base'
 * * the size in wich the text should be displayed
 *
 * **textColor**
 * * string: 'primary' | 'secondary' | 'accent' | 'success' | 'error' | 'warning' | 'info' | 'surface' | 'text' | 'black'
 * * default 'text'
 * * the color in wich the text should be displayed
 *
 * **typewriterSpeed**
 * * number
 * * default: 0
 * * if greater than 0, the text will be displayed typewriter style
 */
export default class Text extends SvelteComponentTyped<TextProps, TextEvents, TextSlots> {
}
export {};
